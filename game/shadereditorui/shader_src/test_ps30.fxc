// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_SWARM_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );

// Constants
const float4 g_cData_local_player_data		: register( c16 ); 		// Callback

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float _var0 = g_cData_local_player_data.z;
	float4 _texLookup_11 = tex2D( _Sampler_00, In.vTexCoord_0 );
	float _var1 = _texLookup_11.r;
	float _var2 = _texLookup_11.g;
	float _var3 = _texLookup_11.b;
	float _var4 = _texLookup_11.a;
	float _var5 = g_cData_local_player_data.x;
	float2 _var6 = In.vTexCoord_0 - float( 0.500000 );
	float _var7 = g_cData_local_player_data.y;
	float _var8 = g_cData_local_player_data.w;
	_var5 = float( 1.000000 ) - _var5;
	float _var9 = dot( _var6, _var6 );
	float _var10 = fmod( _var8, float( 4.000000 ) );
	float _var11 = _var8 - float( 1.000000 );
	_var1 = _var1 + _var5;
	_var9 = _var5 - _var9;
	_var11 = fmod( _var11, float( 8.000000 ) );
	_var9 = pow( _var9, float( 5.000000 ) );
	_var9 = _var9 + float( 0.400000 );
	_var9 = saturate( _var9 );
	_var2 = lerp( _var2, float( 0.000000 ), _var9 );
	_var3 = lerp( _var3, float( 0.000000 ), _var9 );
	float2 _var12 = float2( _var1, _var2 );
	float3 _var13 = float3( _var12, _var3 );
	float4 _var14 = float4( _var13, _var4 );
	Out.vColor_0 = _var14;
	return Out;
}