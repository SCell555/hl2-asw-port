// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_SWARM_COMPILE

// Combos
// DYNAMIC: "VERTEXCOLOR"		"0..1"
// DYNAMIC: "NUM_LIGHTS"		"0..4"
// DYNAMIC: "PIXELFOGTYPE"		"0..1"
// DYNAMIC: "WRITEWATERFOGTODESTALPHA"		"0..1"

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Constants
const float3 g_cAmbientCube[6]		: register( c0 );
PixelShaderLightInfo g_cLightInfo[3]		: register( c6 );

// User code - function bodies
void Vec3WorldToTangent( in float3 iTangentVector, in float3 iWorldNormal, in float3 iWorldTangent, in float3 iWorldBinormal, out float3 vWorldVector )
{
	float3 tmp;
	tmp.xyz = iTangentVector.x * iWorldTangent.xyz;
	tmp.xyz += iTangentVector.y * iWorldBinormal.xyz;
	tmp.xyz += iTangentVector.z * iWorldNormal.xyz;
	vWorldVector = tmp;
}

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
	float3 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float3 vTexCoord_3			:	TEXCOORD3;
	float3 vTexCoord_4			:	TEXCOORD4;
	float4 vTexCoord_5			:	TEXCOORD5;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = tex2D( _Sampler_00, In.vTexCoord_0 ).rgb;
	float3 _var1 = float3( 0.000000, 0.000000, 0.000000 );
	float3 _var2 = tex2D( _Sampler_01, In.vTexCoord_0 ).rgb;
	float3 _var3 = normalize( In.vTexCoord_1 );
	_var2 = _var2 * float( 2.000000 );
#if ( VERTEXCOLOR == 0 )
		_var3 = PixelShaderDoLighting( In.vTexCoord_4, _var3, float3(0,0,0),
				false, true, In.vTexCoord_5,
				g_cAmbientCube, NUM_LIGHTS, g_cLightInfo,
				true, false, 1.0f );
		_var1 = _var3;
#endif
	_var2 = _var2 - float( 1.000000 );
#if ( VERTEXCOLOR == 1 )
		float3 _var4 = (float3)0;
		Vec3WorldToTangent( _var2, In.vTexCoord_1, In.vTexCoord_2, In.vTexCoord_3, _var4 );
		_var1 = _var4;
#endif
	_var1 = _var1;
	_var0 = _var0 * _var1;
	float4 _var5 = float4( _var0.x, _var0.y, _var0.z, 1.000000 );
	_var5 = FinalOutput( _var5, float( 0.000000 ), PIXELFOGTYPE, TONEMAP_SCALE_LINEAR, true, float( 0.000000 ) );
	Out.vColor_0 = _var5;
	return Out;
}