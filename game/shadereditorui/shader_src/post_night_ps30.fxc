// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_SWARM_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );

// Constants
const float _g_Time		: register( c16 );

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float4 _texLookup_20 = tex2D( _Sampler_00, In.vTexCoord_0 );
	float3 _var0 = _texLookup_20.rgb;
	float _var1 = _texLookup_20.a;
	float _var2 = In.vTexCoord_0.y;
	float _var3 = _g_Time * float( 19.500000 );
	float2 _var4 = In.vTexCoord_0 - float( 0.500000 );
	float _var5 = In.vTexCoord_0.x;
	float _var6 = _var2 * float( 100.000000 );
	_var3 = cos( _var3 );
	float _var7 = dot( _var4, _var4 );
	_var5 = _var5 * _var2;
	float _var8 = sin( _var6 );
	_var7 = float( 1.000000 ) - _var7;
	_var5 = _var5 * _g_Time;
	float2 _var9 = float2( _var8, _var3 );
	_var7 = pow( _var7, float( 5.000000 ) );
	_var5 = _var5 * float( 1000.000000 );
	_var9 = _var9 * float( 0.500000 );
	_var7 = _var7 + float( 0.300000 );
	float _var10 = fmod( _var5, float( 13.000000 ) );
	float _var11 = fmod( _var5, float( 123.000000 ) );
	float3 _var12 = float3( _var9, _var6 );
	_var7 = saturate( _var7 );
	_var10 = _var10 * _var11;
	_var12 = _var0 * _var12;
	_var10 = fmod( _var10, float( 0.010000 ) );
	_var12 = _var12 * float( 0.500000 );
	float2 _var13 = float2( _var10, _var10 );
	_var12 = _var0 + _var12;
	float3 _var14 = float3( _var13, _var10 );
	_var12 = float3( 1.000000, 2.500000, 1.000000 ) * _var12;
	_var14 = _var14 * float( 100.000000 );
	float _var15 = dot( float3( 0.222000, 0.707000, 0.071000 ), _var12 );
	float3 _var16 = _var12;
	_var14 = float( 0.100000 ) + _var14;
	if ( _var15 > float( 0.400000 ) )
	{
		_var16 = _var16 * float( 2.000000 );
	}
	_var12 = _var16;
	_var14 = saturate( _var14 );
	_var12 = _var12 * _var14;
	_var12 = _var12 * float3( 1.000000, 1.000000, 2.500000 );
	_var12 = _var7 * _var12;
	float4 _var17 = float4( _var12, _var1 );
	Out.vColor_0 = _var17;
	return Out;
}