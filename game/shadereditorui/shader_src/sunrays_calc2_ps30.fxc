// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_SWARM_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );

// Constants
const float4 g_cData_sun_data		: register( c16 ); 		// Callback

// Arrays
static const float g_cArray_105[35] =
{
	float( 0.950000f ),
	float( 0.945000f ),
	float( 0.940000f ),
	float( 0.935000f ),
	float( 0.930000f ),
	float( 0.925000f ),
	float( 0.920000f ),
	float( 0.915000f ),
	float( 0.910000f ),
	float( 0.905000f ),
	float( 0.900000f ),
	float( 0.895000f ),
	float( 0.890000f ),
	float( 0.885000f ),
	float( 0.880000f ),
	float( 0.875000f ),
	float( 0.870000f ),
	float( 0.865000f ),
	float( 0.860000f ),
	float( 0.855000f ),
	float( 0.850000f ),
	float( 0.845000f ),
	float( 0.840000f ),
	float( 0.835000f ),
	float( 0.830000f ),
	float( 0.825000f ),
	float( 0.820000f ),
	float( 0.815000f ),
	float( 0.810000f ),
	float( 0.805000f ),
	float( 0.800000f ),
	float( 0.795000f ),
	float( 0.790000f ),
	float( 0.785000f ),
	float( 0.780000f ),
};

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = float3( 0.000000, 0.000000, 0.000000 );
	float2 _var1 = In.vTexCoord_0;
	float2 _var2 = g_cData_sun_data.xy;
	float _var3 = float( 1.000000 );
	float _var4 = g_cData_sun_data.z;
	_var2 = In.vTexCoord_0 - _var2;
	_var4 = saturate( _var4 );
	float _var5 = length( _var2 );
	float2 _var6 = _var2 / _var5;
	float _var7 = smoothstep( float( 0.000000 ), float( 0.700000 ), _var5 );
	_var6 = _var6 * _var7;
	_var6 = _var6 * float( 0.011000 );
	for ( int _var8 = 0; _var8 < 35; _var8++ )
	{
		float2 _var9 = _var6;
		_var1 = _var1 - _var9;
		_var3 = _var3 * g_cArray_105[_var8];
		float4 _texLookup_26 = tex2D( _Sampler_00, _var1 );
		float3 _var10 = _texLookup_26.rgb;
		float _var11 = _texLookup_26.a;
		_var10 = _var10 * _var11;
		_var10 = _var10 * _var3;
		_var0 = _var0 + _var10;
	}
	_var0 = _var0 * float( 0.060000 );
	_var0 = _var0 * _var4;
	float4 _var12 = float4( _var0.x, _var0.y, _var0.z, 1.000000 );
	Out.vColor_0 = _var12;
	return Out;
}